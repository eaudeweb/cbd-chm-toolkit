diff --git a/domain_views.info b/domain_views.info
index 9e40703..780c26d 100644
--- a/domain_views.info
+++ b/domain_views.info
@@ -7,11 +7,13 @@ core = 7.x
 files[] = domain_views.module
 files[] = domain_views.views.inc
 ; Includes
+
 files[] = includes/domain_views_handler_argument_domain_access_gid.inc
 files[] = includes/domain_views_handler_field_domain_id.inc
 files[] = includes/domain_views_handler_field_domain_sitename.inc
 files[] = includes/domain_views_handler_field_domain_subdomain.inc
 files[] = includes/domain_views_handler_field_domain_access_sitename.inc
+files[] = includes/domain_views_handler_field_domain_access_current_all.inc
 files[] = includes/domain_views_handler_filter_domain_access_current_all.inc
 files[] = includes/domain_views_handler_filter_domain_access_gid.inc
 files[] = includes/domain_views_handler_filter_domain_access_realm.inc
diff --git a/domain_views.views.inc b/domain_views.views.inc
index 53d1ee9..51ad677 100644
--- a/domain_views.views.inc
+++ b/domain_views.views.inc
@@ -174,17 +174,11 @@ function domain_views_views_data() {
   $data['domain_access']['table']['join']['node'] = array(
     'left_field' => 'nid',
     'field' => 'nid',
-    'extra' => array(
-      array('field' => 'realm', 'value' => 'domain_id', 'numeric' => FALSE),
-    ),
   );
   // Define the joins between {node_revision} and {domain_access}.
   $data['domain_access']['table']['join']['node_revision'] = array(
     'left_field' => 'nid',
     'field' => 'nid',
-    'extra' => array(
-      array('field' => 'realm', 'value' => 'domain_id', 'numeric' => FALSE),
-    ),
   );
   // Join the two domain tables.
   // Note that we only JOIN on domain_id records.
@@ -262,7 +256,7 @@ function domain_views_views_data() {
     'help' => t('Filters out nodes not available on current domain (published to current domain or all affiliates)'),
     'field' => array(
       'field' => 'gid',
-      'handler' => 'views_handler_field_boolean',
+      'handler' => 'domain_views_handler_field_domain_access_current_all',
       'click sortable' => TRUE,
     ),
     'filter' => array(
diff --git a/includes/domain_views_handler_field_domain_access_current_all.inc b/includes/domain_views_handler_field_domain_access_current_all.inc
new file mode 100644
index 0000000..de0c174
--- /dev/null
+++ b/includes/domain_views_handler_field_domain_access_current_all.inc
@@ -0,0 +1,42 @@
+<?php
+/**
+ * @file
+ * Interface between domain_views.module and views.module.
+ *
+ * @ingroup domain_views
+ */
+
+/**
+ * Field handler to provide simple renderer that allows linking to a domain.
+ *
+ * @ingroup domain_views
+ */
+class domain_views_handler_field_domain_access_current_all extends views_handler_field_boolean {
+
+  /**
+   * Constructor to provide additional field to add.
+   */
+  function construct() {
+    parent::construct();
+    $this->additional_fields['realm'] = 'realm';
+  }
+
+  function render($values) {
+    $value = $this->get_value($values);
+    if (!empty($this->options['not'])) {
+      $value = !$value;
+    }
+    // Set $value to true if the current realm is domain_site, otherwise the value is 0 and marked as false.
+    if (isset($values->domain_access_realm) && $values->domain_access_realm == 'domain_site') {
+      $value = TRUE;
+    }
+
+    if (isset($this->formats[$this->options['type']])) {
+      return $value ? $this->formats[$this->options['type']][0] : $this->formats[$this->options['type']][1];
+    }
+    else {
+      return $value ? $this->formats['yes-no'][0] : $this->formats['yes-no'][1];
+    }
+  }
+
+}
